/**
 * This class is generated by jOOQ
 */
package com.example.mindoc_transfer.db.pojo.tables.records;


import com.example.mindoc_transfer.db.pojo.tables.MdRelationship;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdRelationshipRecord extends UpdatableRecordImpl<MdRelationshipRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1120212061;

    /**
     * Setter for <code>mindoc_db.md_relationship.relationship_id</code>.
     */
    public void setRelationshipId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mindoc_db.md_relationship.relationship_id</code>.
     */
    public Integer getRelationshipId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mindoc_db.md_relationship.member_id</code>.
     */
    public void setMemberId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mindoc_db.md_relationship.member_id</code>.
     */
    public Integer getMemberId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mindoc_db.md_relationship.book_id</code>.
     */
    public void setBookId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mindoc_db.md_relationship.book_id</code>.
     */
    public Integer getBookId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mindoc_db.md_relationship.role_id</code>.
     */
    public void setRoleId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>mindoc_db.md_relationship.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return MdRelationship.MD_RELATIONSHIP.RELATIONSHIP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return MdRelationship.MD_RELATIONSHIP.MEMBER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return MdRelationship.MD_RELATIONSHIP.BOOK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return MdRelationship.MD_RELATIONSHIP.ROLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRelationshipId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getMemberId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getBookId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getRoleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdRelationshipRecord value1(Integer value) {
        setRelationshipId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdRelationshipRecord value2(Integer value) {
        setMemberId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdRelationshipRecord value3(Integer value) {
        setBookId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdRelationshipRecord value4(Integer value) {
        setRoleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdRelationshipRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    @Override
    public Integer component1() {
        return null;
    }

    @Override
    public Integer component2() {
        return null;
    }

    @Override
    public Integer component3() {
        return null;
    }

    @Override
    public Integer component4() {
        return null;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MdRelationshipRecord
     */
    public MdRelationshipRecord() {
        super(MdRelationship.MD_RELATIONSHIP);
    }

    /**
     * Create a detached, initialised MdRelationshipRecord
     */
    public MdRelationshipRecord(Integer relationshipId, Integer memberId, Integer bookId, Integer roleId) {
        super(MdRelationship.MD_RELATIONSHIP);

        set(0, relationshipId);
        set(1, memberId);
        set(2, bookId);
        set(3, roleId);
    }
}
