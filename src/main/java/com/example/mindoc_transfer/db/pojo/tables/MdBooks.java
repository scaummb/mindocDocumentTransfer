/**
 * This class is generated by jOOQ
 */
package com.example.mindoc_transfer.db.pojo.tables;


import com.example.mindoc_transfer.db.pojo.Keys;
import com.example.mindoc_transfer.db.pojo.MindocDb;
import com.example.mindoc_transfer.db.pojo.tables.records.MdBooksRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdBooks extends TableImpl<MdBooksRecord> {

    private static final long serialVersionUID = 939624693;

    /**
     * The reference instance of <code>mindoc_db.md_books</code>
     */
    public static final MdBooks MD_BOOKS = new MdBooks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MdBooksRecord> getRecordType() {
        return MdBooksRecord.class;
    }

    /**
     * The column <code>mindoc_db.md_books.book_id</code>.
     */
    public final TableField<MdBooksRecord, Integer> BOOK_ID = createField("book_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mindoc_db.md_books.book_name</code>.
     */
    public final TableField<MdBooksRecord, String> BOOK_NAME = createField("book_name", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.identify</code>.
     */
    public final TableField<MdBooksRecord, String> IDENTIFY = createField("identify", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.order_index</code>.
     */
    public final TableField<MdBooksRecord, Integer> ORDER_INDEX = createField("order_index", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_books.description</code>.
     */
    public final TableField<MdBooksRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(2000).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.label</code>.
     */
    public final TableField<MdBooksRecord, String> LABEL = createField("label", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.privately_owned</code>.
     */
    public final TableField<MdBooksRecord, Integer> PRIVATELY_OWNED = createField("privately_owned", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_books.private_token</code>.
     */
    public final TableField<MdBooksRecord, String> PRIVATE_TOKEN = createField("private_token", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

    /**
     * The column <code>mindoc_db.md_books.status</code>.
     */
    public final TableField<MdBooksRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_books.editor</code>.
     */
    public final TableField<MdBooksRecord, String> EDITOR = createField("editor", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.doc_count</code>.
     */
    public final TableField<MdBooksRecord, Integer> DOC_COUNT = createField("doc_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_books.comment_status</code>.
     */
    public final TableField<MdBooksRecord, String> COMMENT_STATUS = createField("comment_status", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("open", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.comment_count</code>.
     */
    public final TableField<MdBooksRecord, Integer> COMMENT_COUNT = createField("comment_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_books.cover</code>.
     */
    public final TableField<MdBooksRecord, String> COVER = createField("cover", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.theme</code>.
     */
    public final TableField<MdBooksRecord, String> THEME = createField("theme", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("default", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_books.create_time</code>.
     */
    public final TableField<MdBooksRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>mindoc_db.md_books.member_id</code>.
     */
    public final TableField<MdBooksRecord, Integer> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_books.modify_time</code>.
     */
    public final TableField<MdBooksRecord, Timestamp> MODIFY_TIME = createField("modify_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mindoc_db.md_books.version</code>.
     */
    public final TableField<MdBooksRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>mindoc_db.md_books</code> table reference
     */
    public MdBooks() {
        this("md_books", null);
    }

    /**
     * Create an aliased <code>mindoc_db.md_books</code> table reference
     */
    public MdBooks(String alias) {
        this(alias, MD_BOOKS);
    }

    private MdBooks(String alias, Table<MdBooksRecord> aliased) {
        this(alias, aliased, null);
    }

    private MdBooks(String alias, Table<MdBooksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MindocDb.MINDOC_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MdBooksRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MD_BOOKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MdBooksRecord> getPrimaryKey() {
        return Keys.KEY_MD_BOOKS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MdBooksRecord>> getKeys() {
        return Arrays.<UniqueKey<MdBooksRecord>>asList(Keys.KEY_MD_BOOKS_PRIMARY, Keys.KEY_MD_BOOKS_IDENTIFY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdBooks as(String alias) {
        return new MdBooks(alias, this);
    }

    /**
     * Rename this table
     */
    public MdBooks rename(String name) {
        return new MdBooks(name, null);
    }
}
