/**
 * This class is generated by jOOQ
 */
package com.example.mindoc_transfer.db.pojo.tables.daos;


import com.example.mindoc_transfer.db.pojo.tables.MdLogs;
import com.example.mindoc_transfer.db.pojo.tables.records.MdLogsRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdLogsDao extends DAOImpl<MdLogsRecord, com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs, Long> {

    /**
     * Create a new MdLogsDao without any configuration
     */
    public MdLogsDao() {
        super(MdLogs.MD_LOGS, com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs.class);
    }

    /**
     * Create a new MdLogsDao with an attached configuration
     */
    public MdLogsDao(Configuration configuration) {
        super(MdLogs.MD_LOGS, com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs object) {
        return object.getLogId();
    }

    /**
     * Fetch records that have <code>log_id IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByLogId(Long... values) {
        return fetch(MdLogs.MD_LOGS.LOG_ID, values);
    }

    /**
     * Fetch a unique record that has <code>log_id = value</code>
     */
    public com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs fetchOneByLogId(Long value) {
        return fetchOne(MdLogs.MD_LOGS.LOG_ID, value);
    }

    /**
     * Fetch records that have <code>member_id IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByMemberId(Integer... values) {
        return fetch(MdLogs.MD_LOGS.MEMBER_ID, values);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByCategory(String... values) {
        return fetch(MdLogs.MD_LOGS.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByContent(String... values) {
        return fetch(MdLogs.MD_LOGS.CONTENT, values);
    }

    /**
     * Fetch records that have <code>original_data IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByOriginalData(String... values) {
        return fetch(MdLogs.MD_LOGS.ORIGINAL_DATA, values);
    }

    /**
     * Fetch records that have <code>present_data IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByPresentData(String... values) {
        return fetch(MdLogs.MD_LOGS.PRESENT_DATA, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByCreateTime(Timestamp... values) {
        return fetch(MdLogs.MD_LOGS.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>user_agent IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByUserAgent(String... values) {
        return fetch(MdLogs.MD_LOGS.USER_AGENT, values);
    }

    /**
     * Fetch records that have <code>ip_address IN (values)</code>
     */
    public List<com.example.mindoc_transfer.db.pojo.tables.pojos.MdLogs> fetchByIpAddress(String... values) {
        return fetch(MdLogs.MD_LOGS.IP_ADDRESS, values);
    }
}
