/**
 * This class is generated by jOOQ
 */
package com.example.mindoc_transfer.db.pojo.tables;


import com.example.mindoc_transfer.db.pojo.Keys;
import com.example.mindoc_transfer.db.pojo.MindocDb;
import com.example.mindoc_transfer.db.pojo.tables.records.MdDocumentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdDocuments extends TableImpl<MdDocumentsRecord> {

    private static final long serialVersionUID = -1148765121;

    /**
     * The reference instance of <code>mindoc_db.md_documents</code>
     */
    public static final MdDocuments MD_DOCUMENTS = new MdDocuments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MdDocumentsRecord> getRecordType() {
        return MdDocumentsRecord.class;
    }

    /**
     * The column <code>mindoc_db.md_documents.document_id</code>.
     */
    public final TableField<MdDocumentsRecord, Integer> DOCUMENT_ID = createField("document_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mindoc_db.md_documents.document_name</code>.
     */
    public final TableField<MdDocumentsRecord, String> DOCUMENT_NAME = createField("document_name", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_documents.identify</code>.
     */
    public final TableField<MdDocumentsRecord, String> IDENTIFY = createField("identify", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.field("null", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_documents.book_id</code>.
     */
    public final TableField<MdDocumentsRecord, Integer> BOOK_ID = createField("book_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_documents.parent_id</code>.
     */
    public final TableField<MdDocumentsRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_documents.order_sort</code>.
     */
    public final TableField<MdDocumentsRecord, Integer> ORDER_SORT = createField("order_sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_documents.markdown</code>.
     */
    public final TableField<MdDocumentsRecord, String> MARKDOWN = createField("markdown", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mindoc_db.md_documents.release</code>.
     */
    public final TableField<MdDocumentsRecord, String> RELEASE = createField("release", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mindoc_db.md_documents.content</code>.
     */
    public final TableField<MdDocumentsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mindoc_db.md_documents.create_time</code>.
     */
    public final TableField<MdDocumentsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>mindoc_db.md_documents.member_id</code>.
     */
    public final TableField<MdDocumentsRecord, Integer> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_documents.modify_time</code>.
     */
    public final TableField<MdDocumentsRecord, Timestamp> MODIFY_TIME = createField("modify_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>mindoc_db.md_documents.modify_at</code>.
     */
    public final TableField<MdDocumentsRecord, Integer> MODIFY_AT = createField("modify_at", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_documents.version</code>.
     */
    public final TableField<MdDocumentsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>mindoc_db.md_documents</code> table reference
     */
    public MdDocuments() {
        this("md_documents", null);
    }

    /**
     * Create an aliased <code>mindoc_db.md_documents</code> table reference
     */
    public MdDocuments(String alias) {
        this(alias, MD_DOCUMENTS);
    }

    private MdDocuments(String alias, Table<MdDocumentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MdDocuments(String alias, Table<MdDocumentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MindocDb.MINDOC_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MdDocumentsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MD_DOCUMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MdDocumentsRecord> getPrimaryKey() {
        return Keys.KEY_MD_DOCUMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MdDocumentsRecord>> getKeys() {
        return Arrays.<UniqueKey<MdDocumentsRecord>>asList(Keys.KEY_MD_DOCUMENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdDocuments as(String alias) {
        return new MdDocuments(alias, this);
    }

    /**
     * Rename this table
     */
    public MdDocuments rename(String name) {
        return new MdDocuments(name, null);
    }
}
