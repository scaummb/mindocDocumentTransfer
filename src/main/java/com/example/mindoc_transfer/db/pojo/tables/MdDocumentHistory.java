/**
 * This class is generated by jOOQ
 */
package com.example.mindoc_transfer.db.pojo.tables;


import com.example.mindoc_transfer.db.pojo.Keys;
import com.example.mindoc_transfer.db.pojo.MindocDb;
import com.example.mindoc_transfer.db.pojo.tables.records.MdDocumentHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdDocumentHistory extends TableImpl<MdDocumentHistoryRecord> {

    private static final long serialVersionUID = -1439786804;

    /**
     * The reference instance of <code>mindoc_db.md_document_history</code>
     */
    public static final MdDocumentHistory MD_DOCUMENT_HISTORY = new MdDocumentHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MdDocumentHistoryRecord> getRecordType() {
        return MdDocumentHistoryRecord.class;
    }

    /**
     * The column <code>mindoc_db.md_document_history.history_id</code>.
     */
    public final TableField<MdDocumentHistoryRecord, Integer> HISTORY_ID = createField("history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.action</code>.
     */
    public final TableField<MdDocumentHistoryRecord, String> ACTION = createField("action", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.action_name</code>.
     */
    public final TableField<MdDocumentHistoryRecord, String> ACTION_NAME = createField("action_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.document_id</code>.
     */
    public final TableField<MdDocumentHistoryRecord, Integer> DOCUMENT_ID = createField("document_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.document_name</code>.
     */
    public final TableField<MdDocumentHistoryRecord, String> DOCUMENT_NAME = createField("document_name", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.parent_id</code>.
     */
    public final TableField<MdDocumentHistoryRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.markdown</code>.
     */
    public final TableField<MdDocumentHistoryRecord, String> MARKDOWN = createField("markdown", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mindoc_db.md_document_history.content</code>.
     */
    public final TableField<MdDocumentHistoryRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mindoc_db.md_document_history.member_id</code>.
     */
    public final TableField<MdDocumentHistoryRecord, Integer> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.modify_time</code>.
     */
    public final TableField<MdDocumentHistoryRecord, Timestamp> MODIFY_TIME = createField("modify_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.modify_at</code>.
     */
    public final TableField<MdDocumentHistoryRecord, Integer> MODIFY_AT = createField("modify_at", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mindoc_db.md_document_history.version</code>.
     */
    public final TableField<MdDocumentHistoryRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>mindoc_db.md_document_history</code> table reference
     */
    public MdDocumentHistory() {
        this("md_document_history", null);
    }

    /**
     * Create an aliased <code>mindoc_db.md_document_history</code> table reference
     */
    public MdDocumentHistory(String alias) {
        this(alias, MD_DOCUMENT_HISTORY);
    }

    private MdDocumentHistory(String alias, Table<MdDocumentHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private MdDocumentHistory(String alias, Table<MdDocumentHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MindocDb.MINDOC_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MdDocumentHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MD_DOCUMENT_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MdDocumentHistoryRecord> getPrimaryKey() {
        return Keys.KEY_MD_DOCUMENT_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MdDocumentHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<MdDocumentHistoryRecord>>asList(Keys.KEY_MD_DOCUMENT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdDocumentHistory as(String alias) {
        return new MdDocumentHistory(alias, this);
    }

    /**
     * Rename this table
     */
    public MdDocumentHistory rename(String name) {
        return new MdDocumentHistory(name, null);
    }
}
